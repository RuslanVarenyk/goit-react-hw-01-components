{"version":3,"sources":["profile/profile.module.css","friend-list/friend-list.module.css","statistics/statistics.module.css","transactions/transaction.module.css","profile/Profile.jsx","statistics/Statistics.jsx","friend-list/FriendListItem.jsx","friend-list/FriendList.jsx","transactions/TransactionHistory.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["module","exports","Profile","avatar","name","tag","location","stats","className","styles","profile","description","src","alt","label","quantity","followers","views","likes","Statistics","title","statistics","statsList","map","data","item","percentage","FriendListItem","isOnline","online","offline","width","FriendList","friends","friendList","friend","TransactionHistory","items","transactionHistory","type","amount","currency","App","user","statData","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1395e274.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__1wdtb\",\"description\":\"profile_description__N766P\",\"avatar\":\"profile_avatar__3Z-FZ\",\"name\":\"profile_name__3JxcV\",\"tag\":\"profile_tag__3n9jR\",\"location\":\"profile_location__uc3sN\",\"stats\":\"profile_stats__ZNudr\",\"label\":\"profile_label__3DvJC\",\"quantity\":\"profile_quantity__2hnAy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"friend-list_friendList__1iB8t\",\"item\":\"friend-list_item__1z9Ec\",\"online\":\"friend-list_online__o3-f7\",\"offline\":\"friend-list_offline__ODsv4\",\"avatar\":\"friend-list_avatar__1xbYl\",\"name\":\"friend-list_name__16MM1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"statistics_statistics__NK1-Z\",\"title\":\"statistics_title__1CFIO\",\"statsList\":\"statistics_statsList__7oefS\",\"item\":\"statistics_item__3WX59\",\"label\":\"statistics_label__ZTbes\",\"percentage\":\"statistics_percentage__2kjVt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"transaction_transactionHistory__zBNgl\"};","import PropTypes from 'prop-types';\r\nimport styles from './profile.module.css'\r\n\r\nfunction Profile({avatar, name, tag, location, stats}) {\r\n    return (\r\n        <div className={styles.profile}>\r\n            <div className={styles.description}>\r\n                <img\r\n                        src={avatar}\r\n                        alt=\"Аватар пользователя\"\r\n                        className={styles.avatar}\r\n                />\r\n                <p className={styles.name}>{name}</p>\r\n                <p className={styles.tag}>@{tag}</p>\r\n                <p className={styles.location}>{location}</p>\r\n            </div>\r\n\r\n            <ul className={styles.stats}>\r\n                <li>\r\n                    <span className={styles.label}>Followers </span>\r\n                    <span className={styles.quantity}>{stats.followers}</span>\r\n                </li>\r\n                <li>\r\n                    <span className={styles.label}>Views </span>\r\n                    <span className={styles.quantity}>{stats.views}</span>\r\n                </li>\r\n                <li>\r\n                    <span className={styles.label}>Likes </span>\r\n                    <span className={styles.quantity}>{stats.likes}</span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n\r\nProfile.propTypes = {\r\n    avatar: PropTypes.string,\r\n    name: PropTypes.string,\r\n    tag: PropTypes.string,\r\n    location: PropTypes.string,\r\n    stats: PropTypes.objectOf(PropTypes.number),\r\n}","import PropTypes, { number, shape, string } from 'prop-types';\r\nimport styles from './statistics.module.css';\r\n\r\nfunction Statistics({stats, title}) {\r\n    return (\r\n        <section className={styles.statistics}>\r\n            { title && <h2 className={styles.title}>Upload stats</h2>}\r\n\r\n            <ul className={styles.statsList}>\r\n            {stats.map(data => \r\n                <li className={styles.item}>\r\n                <span className={styles.label}>{data.label} </span>\r\n                <span className={styles.percentage}>{data.percentage}%</span>\r\n                </li>\r\n            )}\r\n        </ul>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n    stats: PropTypes.arrayOf(shape({\r\n        label: string.isRequired,\r\n        percentage: number.isRequired,\r\n    })),\r\n}","import PropTypes from 'prop-types';\r\nimport styles from './friend-list.module.css';\r\n\r\nfunction FriendListItem({avatar, name, isOnline}) {\r\n  return (\r\n    <li className={styles.item}>\r\n        <span className={isOnline ? styles.online : styles.offline}/>\r\n        <img className={styles.avatar} src={avatar} alt={name} width=\"48\" />\r\n      <p className={styles.name}>{name}</p>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default FriendListItem;\r\n\r\nFriendListItem.propTypes = {\r\n  avatar: PropTypes.string,\r\n  name: PropTypes.string,\r\n  isOnline: PropTypes.bool,\r\n};","import FriendListItem from \"./FriendListItem\";\r\nimport PropTypes from 'prop-types';\r\nimport styles from './friend-list.module.css';\r\n\r\nfunction FriendList({friends}) {\r\n  return (\r\n    <ul className={styles.friendList}>\r\n        {friends.map(friend => \r\n          <FriendListItem\r\n            avatar={friend.avatar}\r\n            name={friend.name}\r\n            isOnline={friend.isOnline} />\r\n        )}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default FriendList;\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.array,\r\n};","import PropTypes, { shape, string, number } from 'prop-types';\r\nimport styles from './transaction.module.css'\r\n\r\nfunction TransactionHistory({items}) {\r\n    return (\r\n        <table className={styles.transactionHistory}>\r\n            <thead>\r\n                <tr>\r\n                    <th>Type</th>\r\n                    <th>Amount</th>\r\n                    <th>Currency</th>\r\n                </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n                {items.map(item => \r\n                    <tr>\r\n                        <td>{item.type}</td>\r\n                        <td>{item.amount}</td>\r\n                        <td>{item.currency}</td>\r\n                    </tr>\r\n                )}\r\n            </tbody>\r\n        </table>\r\n  );\r\n}\r\n\r\nexport default TransactionHistory;\r\n\r\nTransactionHistory.propTypes = {\r\n    items: PropTypes.arrayOf(shape({\r\n        type: string.isRequired,\r\n        amount: number.isRequired,\r\n        currency: string.isRequired,\r\n    })),\r\n}","import Profile from \"./profile/Profile\";\r\nimport Statistics from \"./statistics/Statistics\";\r\nimport FriendList from \"./friend-list/FriendList\";\r\nimport TransactionHistory from \"./transactions/TransactionHistory\";\r\nimport user from \"./profile/user.json\";\r\nimport statData from \"./statistics/statistical-data.json\";\r\nimport friends from \"./friend-list/friends.json\";\r\nimport transactions from \"./transactions/transactions.json\"\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Profile\r\n        name={user.name}\r\n        tag={user.tag}\r\n        location={user.location}\r\n        avatar={user.avatar}\r\n        stats={user.stats}/>\r\n      <Statistics\r\n        title=\"Upload stats\"\r\n        stats={statData} />\r\n      <Statistics\r\n        stats={statData}/>\r\n      <FriendList\r\n        friends={friends}/>\r\n      <TransactionHistory\r\n        items={transactions}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}